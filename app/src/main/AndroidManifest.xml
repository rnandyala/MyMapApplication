<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.rajap.mymapapplication">

    <!--
         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
         Google Maps Android API v2, but you must specify either coarse or fine
         location permissions for the 'MyLocation' functionality. 
    -->


    <!--
    This is a new permission that  added as suggested by the
    https://github.com/codepath/android_guides/wiki/Retrieving-Location-with-LocationServices-API

    This is not present in the vivan video

    Marshmallow permission are runtime permission!
    The permissions model has changed starting in Marshmallow.
    If your targetSdkVersion >= 23 and you are running on a Marshmallow (or later) device,
    you may need to enable runtime permissions.
    You can also read more about the runtime permissions changes here.


    -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
    <!-- As map is not shown I am trying add this permission -->



    <!--
     without internet I cannot access the maps
     Inter + Net connecting two or more device together is nothing but internet
    -->
    <uses-permission android:name="android.permission.INTERNET" />
    <!-- used to see whether I can access network or not
     -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <!-- maps are downloaded and stored in external device
    -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <!--
     creating my own permission
     protectionlevel attribute can be used not allow other application to use my permission
    -->


    <!-- This permission will let my app receive permission from google API -->
    <permission
        android:name="com.example.rajap.mymapapplication.permission.MAP_RECEIVE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.example.rajap.mymapapplication.permission.MAP_RECEIVE" />
    <!--  add google services permission This allows me to use google services
     such as maps, locations
     -->
    <uses-permission android:name="com.google.android.provider.gsf.permissions.READ_GSERVICES" />
<!-- open glEsVersion what is it for-->
    <uses-feature
        android:glEsVersion="0x0020000"
        android:required="true" />

    <!-- what is the purpose of android:name? (it is used to register the MainActivity)-->
<!-- >
It is better to know the hierarchy tree now to understand more about the differences between:
a. Context
b. Activity
c. Application
Context is the ultimate parent of the activity
Activity is tied up just to the activity lifecyle where as
Application is tied up to the entire lifecycle of an application (think this is from opening an app to closing an application)

<-->
    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".activity.MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!--
             The API key for Google Maps-based APIs is defined as a string resource.
             (See the file "res/values/google_maps_api.xml").
             Note that the API key is linked to the encryption key used to sign the APK.
             You need a different API key for each encryption key, including the release key that is used to
             sign the APK for publishing.
             You can define the keys for the debug and release targets in src/debug/ and src/release/. 
        -->
  <meta-data
            android:name="com.google.android.maps.v2.API_KEY"
            android:value="AIzaSyA6fmeS2fr84hvRdQgFZ4UfuPMM4YgEBW0" />


<!--
what is the purpose of gms?
-->
        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version"/>

    </application>

</manifest>